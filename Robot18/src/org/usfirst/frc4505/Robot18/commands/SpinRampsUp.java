// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4505.Robot18.commands;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4505.Robot18.Robot;
import org.usfirst.frc4505.Robot18.RobotMap;

/**
 *
 */
public class SpinRampsUp extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public SpinRampsUp() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.ramps);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	if (!RobotMap.safeguard || (Timer.getFPGATimestamp()-RobotMap.tStart) >= 105.0) {
	    	if (Robot.oi.LT.get()) {
	    		Robot.ramps.set(1.0, Robot.oi.LB.get());
	    	} else {
	    		if (RobotMap.prefs.getBoolean("bothXbox", false)) {
	    			//xbox
	    			if (Robot.oi.LT2.get()) {
	    	    		Robot.ramps.set(1.0, Robot.oi.LB2.get());
	    	    	} else if (Robot.oi.LSX2.get()) {
	    	    		if (Robot.oi.getAxis2(Robot.oi.lsx) > 0) {
	    	    			//right
	    	    			Robot.ramps.setRight(1.0, Robot.oi.LB2.get());
	    	    		} else {
	    	    			//left
	    	    			Robot.ramps.setLeft(1.0, Robot.oi.LB2.get());
	    	    		}
	    	    	}
	    		} else {
	    			//joystick
	    			if (Robot.oi.R2.get()) {
	    				//right
		    			Robot.ramps.setRight(1.0, Robot.oi.B6.get());
		    		} else {
		    			//left
		    			Robot.ramps.setLeft(1.0, Robot.oi.B6.get());
		    		}
	    		}
	    	}
    	
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.ramps.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    }
}
